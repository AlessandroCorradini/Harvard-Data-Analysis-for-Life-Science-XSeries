knitr::opts_chunk$set(echo = TRUE)
install.packages("swirl")
library(swirl)
## install.packages("swirl")
library(swirl)
version
## install.packages("swirl")
library(swirl)
class(cars)
library(downloader)
install.packages("downloader")
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleMiceWeights.csv"
filename <- "femaleMiceWeights.csv"
download(url, destfile=filename)
dat <- read.csv("femaleMiceWeights.csv")
head(dat)
install.packages("rafalib")
knitr::opts_chunk$set(echo = TRUE)
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename <- basename(url)
download(url, destfile=filename)
x <- unlist( read.csv(filename) )
library(rafalib)
mypar(1,2)
hist(averages5, xlim=c(18,30))
library(rafalib)
set.seed(1)
n <- 1000
averages5 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,5)
averages5[i] <- mean(X)
}
hist(averages5)
set.seed(1) #so that we get same results
n <- 1000
averages50 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,50)
averages50[i] <- mean(X)
}
hist(averages50) ##take a look
mypar(1,2)
hist(averages5, xlim=c(18,30))
hist(averages50, xlim=c(18,30))
install.packages("dplyr")
library(dplyr)
x <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/mice_pheno.csv"
filename <- basename(url)
download(url, destfile=filename)
dat <- read.csv(filename)
# We will remove the lines that contain missing values:
dat <- na.omit( dat )
library(dplyr)
x <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
mean(x)
knitr::opts_chunk$set(echo = TRUE)
library(downloader)
library(dplyr)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(rafalib)
set.seed(1)
N <- 5
X <- rnorm(N)
sqrt(N)*mean(X)/sd(X)
set.seed(1)
N <- 5
B<- 1000
tstats <- replicate(B,{
X <- rnorm(N)
sqrt(N)*mean(X)/sd(X)
})
mean(tstats>2)
Ns<-seq(5,30,5)
B <- 1000
mypar(3,2)
LIM <- c(-4.5,4.5)
for(N in Ns){
ts <- replicate(B,{
x <- rnorm(N)
y <- rnorm(N)
t.test(x,y, var.equal = TRUE)$stat
})
ps <- seq(1/(B+1),1-1/(B+1),len=B)
qqplot(qt(ps,df=2*N-2),ts,main=N,
xlab="Theoretical",ylab="Observed",
xlim=LIM, ylim=LIM)
abline(0,1)
}
set.seed(1)
N <- 15
B <- 10000
tstats <- replicate(B,{
X <- sample(c(-1,1), N, replace=TRUE)
sqrt(N)*mean(X)/sd(X)
})
ps=seq(1/(B+1), 1-1/(B+1), len=B)
qqplot(qt(ps,N-1), tstats, xlim=range(tstats))
abline(0,1)
set.seed(1)
Ns <- seq(5,45,5)
library(rafalib)
mypar(3,3)
for(N in Ns){
medians <- replicate(10000, median ( rnorm(N) ) )
title <- paste("N=",N,", avg=",round( mean(medians), 2) , ", sd*sqrt(N)=", round( sd(medians)*sqrt(N),2) )
qqnorm(medians, main = title )
qqline(medians)
}
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
set.seed(1)
null <- replicate(1000, {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
})
( sum( abs(null) >= abs(obs)) +1 ) / ( length(null)+1 )
##we add the 1s to avoid p-values=0 but we also accept:
( sum( abs(null) >= abs(obs)) ) / ( length(null) )
set.seed(1)
obs <- median(smokers) - median(nonsmokers)
null <- replicate(1000, {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
median(smokersstar)-median(nonsmokersstar)
})
( sum( abs(null) >= abs(obs)) +1 ) / ( length(null)+1 )
## As before we add 1 to avoid p-value of 0 but we also accept
( sum( abs(null) >= abs(obs)) ) / ( length(null) )
d = read.csv("assoctest.csv")
tab = table(d$allele, d$case)
chisq.test(tab)
tab = table(d$allele, d$case)
fisher.test(tab)
install.packages("UsingR")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rafalib)
data(nym.2002, package="UsingR")
knitr::opts_chunk$set(echo = TRUE)
SE = sqrt(var(diff))
nx<5
nx<-5
ny<-7
X = cbind(rep(1,nx + ny),rep(c(0,1),c(nx, ny)))
XtX = t(X) %*% X
XtX[ 1,1 ]
knitr::opts_chunk$set(echo = TRUE)
library(stats)
y = rnorm(4)
fit = lm(y ~ species + condition)
species <- factor(c("A","A","B","B"))
condition <- factor(c("control","treated","control","treated"))
model.matrix(~ species + condition)
library(stats)
y = rnorm(4)
fit = lm(y ~ species + condition)
contrast(fit, list(species="B",condition="control"), list(species="A",condition="treated"))$X
library(contrast)
install.packages("contrast")
library(contrast)
y = rnorm(4)
fit = lm(y ~ species + condition)
contrast(fit, list(species="B",condition="control"), list(species="A",condition="treated"))$X
library(contrast)
y = rnorm(4)
fit = lm(y ~ species + condition)
contrast(fit, list(species="B",condition="control"), list(species="A",condition="treated"))$X
contrast(fit,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
contrast(fit,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
fitTL <- lm(friction~type+leg, data=spider)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/spider_wolff_gorb_2013.csv"
filename <- "spider_wolff_gorb_2013.csv"
library(downloader)
if (!file.exists(filename)) download(url, filename)
spider <- read.csv(filename, skip=1)
fitTL <- lm(friction~type+leg, data=spider)
L4vsL2 <- contrast(fitTL list(leg="L4",type="pull"), list(leg="L2",type="pull"))
fitTL <- lm(friction~type+leg, data=spider)
L4vsL2 <- contrast(fitTL, list(leg="L4",type="pull"), list(leg="L2",type="pull"))
knitr::opts_chunk$set(echo = TRUE)
Q = qr.Q(qr(X))
Q[1,1]
Q = qr.Q(qr(X))
Q[1][1]
Q = qr.Q(qr(X))
Q[1]
Q = qr.Q(qr(X))
Q
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/spider_wolff_gorb_2013.csv"
filename <- "spider_wolff_gorb_2013.csv"
library(downloader)
if (!file.exists(filename)) download(url, filename)
spider <- read.csv(filename, skip=1)
fit <- lm(friction ~ type + leg, data=spider)
betahat <- coef(fit)
Y <- matrix(spider$friction, ncol=1)
X <- model.matrix(~ type + leg, data=spider)
Q = qr.Q(qr(X))
Q[1]
R = qr.R(qr(X))
R[1]
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
e <- exprs(mas133)
source("http://www.bioconductor.org/biocLite.R")
biocLite("SpikeInSubset")
